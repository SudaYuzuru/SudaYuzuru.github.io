<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>终于踏上了Webpack的道路</title>
      <link href="2021/06/01/seven/"/>
      <url>2021/06/01/seven/</url>
      
        <content type="html"><![CDATA[<p>呀，今天是六一呢🎉🎉🎉，<del>今天不会工作的，因为是狐三岁呢，嘻嘻🤭</del>但作为一个<strong>独立自主的成年人</strong>（认真脸），还是要认真学习，来提升自己💪小卓小卓冲冲冲！！</p><blockquote><h2 id="关于webpack的广为人知的秘密—安装！"><a href="#关于webpack的广为人知的秘密—安装！" class="headerlink" title="关于webpack的广为人知的秘密—安装！"></a>关于webpack的广为人知的秘密—安装！</h2><p>打开命令行，输入👇</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> webpack -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后慢慢等着就好了🍵</p></blockquote><span id="more"></span><blockquote><h2 id="其余乱七八糟，比如创建文档的事情（我记不住，所以我敲下来！）"><a href="#其余乱七八糟，比如创建文档的事情（我记不住，所以我敲下来！）" class="headerlink" title="其余乱七八糟，比如创建文档的事情（我记不住，所以我敲下来！）"></a>其余乱七八糟，比如创建文档的事情（我记不住，所以我敲下来！）</h2><ol><li>建个工程文件夹</li><li>创建<code>dist</code>文件夹用来放结果文件</li><li>创建<code>src</code>文件夹用来放源码</li><li>在src文件夹下依次创建<code>css</code>，<code>js</code>，<code>images</code>资源文件夹</li><li>在src文件夹下创建”index.html”用来当作主页面，”main.js”作为项目的JavaScript入口</li><li>安装jQuery第一步，在命令行输入<code>npm init -y</code>,生成package.json文件</li><li>安装jQuery第二部，在命令行输入<code>npm i jquery -S</code></li><li>在”main.js”文件中导入jQuery<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// import *** from *** 是ES6中导入模块的方式</span><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">'jquery'</span><span class="token comment">// const $ = requires('jquery')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol></blockquote><p>嘛，就写这些吧，之后还没学👋👋👋</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习的路是用头发铺成的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】关于JavaScript语法-PART2</title>
      <link href="2021/05/30/sixth/"/>
      <url>2021/05/30/sixth/</url>
      
        <content type="html"><![CDATA[<p>Yahalo！我又来做笔记啦😀😀😀</p><blockquote><h2 id="关于对象"><a href="#关于对象" class="headerlink" title="关于对象"></a>关于对象</h2></blockquote><blockquote><h3 id="什么是对象？🐘🐘or💑or"><a href="#什么是对象？🐘🐘or💑or" class="headerlink" title="什么是对象？🐘🐘or💑or ???"></a>什么是对象？🐘🐘or💑or ???</h3><p>万物皆对象<br>对象是一个具体的事物，一个具体的事物就会有行为和特性。<br>例如：一辆车🚗，一部手机📱，一只狐狸🦊<br>狐狸🦊是一类事物，而正在敲这份博客的那只才是对象<br><img src="/images/fox.jpg" alt="nino" loading="lazy"><br>特征：金色的毛，豆豆眉<br>行为：打哈欠，敲代码</p></blockquote><blockquote><h3 id="JavaScript中的对象🤔"><a href="#JavaScript中的对象🤔" class="headerlink" title="JavaScript中的对象🤔"></a>JavaScript中的对象🤔</h3><p>JavaScript中的对象其实就是生活中对对象的一个抽象<br>JavaScript的对象是无序属性的集合，其属性可以包含基本值、对象、数组或函数<br>对象就是一组没有顺序的值<br>我们可以把JavaScript中的对象想象成键值对，其中值可以是数据或函数<br>对象的行为和特征： 特征—属性，行为—方法</p></blockquote><span id="more"></span><blockquote><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>//字面量声明对象<br><code>var obj1 = &#123;&#125;;</code><br>//对象中的数据都是键值成对存在的<br>//通常来说，值是函数则称之为方法，其他类型的值都是属性<br><code>var obj2 = &#123;age:12, name:&#39;sho&#39;, fei:function()&#123;&#125;&#125;;</code><br>//实例化方式 声明对象（内置构造函数）<br><code>var  obj3 = new Object();</code><br>//自定义方式 构造函数<br><code>function()&#123;&#125;</code><br>//实例化自定义构造函数方式 声明对象<br><code>var f = new Fun();</code></p></blockquote><blockquote><h3 id="获取对象的属性或方法：-对象-属性名"><a href="#获取对象的属性或方法：-对象-属性名" class="headerlink" title="获取对象的属性或方法： 对象.属性名"></a>获取对象的属性或方法： 对象.属性名</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  age<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>  name<span class="token operator">:</span> <span class="token string">'sho'</span><span class="token punctuation">,</span>  <span class="token function-variable function">fei</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>obj2<span class="token punctuation">.</span><span class="token function">fei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习的路是用头发铺成的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】关于JavaScript语法-PART1</title>
      <link href="2021/05/28/fifth/"/>
      <url>2021/05/28/fifth/</url>
      
        <content type="html"><![CDATA[<p>因为唯一的本子基础点记太多了，以至于整理后的东西没地方写，所以打算用博客进行记录啦！</p><blockquote><h2 id="关于JS语法的基础"><a href="#关于JS语法的基础" class="headerlink" title="关于JS语法的基础"></a>关于JS语法的基础</h2></blockquote><blockquote><h3 id="1-JS变量名需区分大小写，建议使用小驼峰命名法"><a href="#1-JS变量名需区分大小写，建议使用小驼峰命名法" class="headerlink" title="1. JS变量名需区分大小写，建议使用小驼峰命名法"></a>1. JS变量名需区分大小写，建议使用小驼峰命名法</h3><blockquote><ul><li>变量名如果重复赋值的话会替换为后面的值</li><li>多使用<code>let</code>来声明，而不是<code>var</code></li><li>若一次性声明多个变量并赋值，如<code>var h1 = 1, h2 = 2, h3 = 3</code>，需用逗号隔开</li><li>关于赋值： 变量名 = 值</li><li>变量使用<code>let</code>；常量使用<code>const</code>；函数使用<code>function</code></li><li>数据类型：数字number、字符串string、布尔型bool、undefined、null、对象</li></ul></blockquote></blockquote><span id="more"></span><blockquote><h3 id="2-关于运算优先级🔝"><a href="#2-关于运算优先级🔝" class="headerlink" title="2. 关于运算优先级🔝"></a>2. 关于运算优先级🔝</h3><p>运算优先级从上往下</p><blockquote><ol><li>（）优先级最高 </li><li>一元运算符： 累加++、递减–、取非 ! </li><li>算术运算符：与数学中的运算先后一致，即先乘除（*、/、%），后加减（+、-）</li><li>关系运算符：&gt;、&lt;、&gt;=、&lt;=</li><li>相等运算符：相等==、完全相等===、不等于!=、全不等!==<blockquote><p>=== 等同符，当两边值的类型相同时，直接比较值，若类型不相同，直接返回false<br>== 等值符，当等号两边的类型相同时，直接比较值是否相等，若不相同，则先转化为类型相同的值，再进行比较<br>!= 返回同类型值比较结果，类型不同时，会转换类型<br>!== 不同类型不比较，相同类型才比较<br>类型转换规则1：如果等号两边是<code>boolbean</code>、<code>string</code>、<code>number</code>三者中任意两者进行比较时，优先转换为数字进行比较；<br>类型转换规则2：如果等号两边出现了<code>null</code>或<code>undefined</code>，<code>numll</code>和<code>undefined</code>除了和自己相等，就彼此相等<br>！！！注意：NaN == NaN //返回false，NaN和所有都不相等</p></blockquote></li><li>逻辑运算符 先&amp;&amp;，后||</li><li>赋值运算符 =</li></ol></blockquote></blockquote><blockquote><h3 id="3-关于函数"><a href="#3-关于函数" class="headerlink" title="3. 关于函数"></a>3. 关于函数</h3><p>基本形式为</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">function fun(形参，形参)&#123;  代码；  return 返回值；&#125;var re &#x3D; fun(实参1，实参2) &#x2F;&#x2F;fun为函数名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果函数中没有return，那么函数调用后接到的返回值是undefined<br>如果函数中有return，但return后面没有值，那么函数调用后接到的返回值也是undefined<br>函数中return后，不管有什么代码，均不执行，即return后函数的调用结束</p></blockquote><ul><li>匿名函数，即函数本身没有名字👇<blockquote><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">var fun &#x3D; function()&#123;  console.log(1);&#125;fun();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li>立即执行函数，即自调用匿名函数👇<blockquote><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">(function()&#123;    alert(123);&#125;)();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote></li><li>作用域：防止全局变量污染，封装一个局部作用</li><li>函数回调：<blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// var k = 123 + s;</span>    <span class="token comment">// console.log(k);</span>    <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//f2函数会被当作值，传入f1函数内，即函数回调</span><span class="token function">f1</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li>闭包： <blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">f2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> f2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//函数闭包</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">k</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li><li>变量提升<br>变量提升，即在代码执行之间变量已经在编译阶段被声明了<br>P.S. JS代码运行分为两个阶段：</li></ul><ol><li>解析（编译）阶段：语法检查，变量及函数进行声明</li><li>运行阶段：变量赋值，代码流程的执行</li></ol><ul><li>如果函数与变量同名，那么函数声明会替换变量声明<blockquote><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">console.log(a);function()&#123;console.log(&#39;aaaa&#39;);&#125;var a &#x3D; 1;console.log(a);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ul></blockquote><blockquote><h3 id="4-作用域链🔗"><a href="#4-作用域链🔗" class="headerlink" title="4. 作用域链🔗"></a>4. 作用域链🔗</h3><p>当函数中使用给某个变量，优先在自己的作用域中查找，如果找不到，则会向上一层作用域查找；如果还是找不到，则继续向上一层查找，直到全局作用域；如果还是找不到的话，直接报错<br><img src="/images/theScopeChain.png" alt="作用域链" loading="lazy"></p></blockquote><p>今天就到这里啦，收工收工！💪</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习的路是用头发铺成的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【补档】狸猫计划第二弹-仿写小米官网</title>
      <link href="2021/05/22/fotrh/"/>
      <url>2021/05/22/fotrh/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="狸猫计划"><a href="#狸猫计划" class="headerlink" title="狸猫计划"></a>狸猫计划</h2><p>延续了第一弹的<del>完美</del>复刻，将小米的官网主页进行仿写。<br>使用<code>HTML</code>，<code>CSS</code>和少量<code>JavaScript</code>进行构建。<br>其中，<code>JavaScript</code>用于实现官网上的图片幻灯片形式播放。<br>所引用的跳转链接均为小米实际所用链接。<br>代码已经上传到了👉<a href="https://github.com/SudaYuzuru/Test">狸猫测试-伪小米</a>，如果你需要的话，可以进行下载</p></blockquote><span id="more"></span><blockquote><h2 id="实例演示"><a href="#实例演示" class="headerlink" title="实例演示"></a>实例演示</h2><p>关于仿写出来的页面，差不多就长这个样子啦</p></blockquote><p><img src="/images/xiaomi.gif" alt="Xiaomi" loading="lazy"></p><p>乍一看还挺像那么回事的😳</p><blockquote><h2 id="存在缺陷"><a href="#存在缺陷" class="headerlink" title="存在缺陷"></a>存在缺陷</h2><p>呀，局限于自身能力水平和知识储备，整体网页还存在很大的缺陷<br>例如：</p><h3 id="1-幻灯片播放区的小圆点点（我也不知道它的官方叫法是什么）"><a href="#1-幻灯片播放区的小圆点点（我也不知道它的官方叫法是什么）" class="headerlink" title="1. 幻灯片播放区的小圆点点（我也不知道它的官方叫法是什么）"></a>1. 幻灯片播放区的小圆点点（我也不知道它的官方叫法是什么）</h3><p>小圆点点还无法做到随着图片的顺序进行对应显示，鼠标点击也没法切换（问题还挺大的😭😭）</p></blockquote><p><img src="/images/xiaomi-hdp.gif" alt="point" loading="lazy"></p><blockquote><h3 id="2-小米秒杀的定时器"><a href="#2-小米秒杀的定时器" class="headerlink" title="2.  小米秒杀的定时器"></a>2.  小米秒杀的定时器</h3><p>暂时还没加入定时器在页面中（应该不是很难，就是目前没什么时间去完善）</p></blockquote><p><img src="/images/xiaomi-timer.gif" alt="timer" loading="lazy"></p><blockquote><h3 id="3-商品滚动展示"><a href="#3-商品滚动展示" class="headerlink" title="3. 商品滚动展示"></a>3. 商品滚动展示</h3><p>也是秒杀区的问题，目前还不知道怎么实现滚动显示，以及上方切换按钮的使用</p></blockquote><blockquote><h3 id="4-大类中的商品切换"><a href="#4-大类中的商品切换" class="headerlink" title="4. 大类中的商品切换"></a>4. 大类中的商品切换</h3><p>像是家电啊，周边啊，那些区的商品展示无法实现切换，只能看到目前写在上面的商品</p></blockquote><p><img src="/images/xiaomi-page.gif" alt="change" loading="lazy"></p><blockquote><h3 id="5-所有栏的变化提示"><a href="#5-所有栏的变化提示" class="headerlink" title="5. 所有栏的变化提示"></a>5. 所有栏的变化提示</h3><p>关于搜索栏的提示词，目前还没有思路如何去实现为定时变化的</p></blockquote><p><img src="/images/xiaomi-sousuo.gif" alt="research" loading="lazy"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为这个项目已经搁置有一阵子了，是4月5日结束的，学习前端两个月的成品，虽然漏洞百出，但大体上还是可以迷惑下眼球😵<br>一直在忙课业✍的事，所以把前端尘封了很久，搭博客之后会慢慢捡起来的💪<br>去小米的官网又看了一下，发现新更新了好多设计，比如商品描述啊，新品提示啊之类的，看来完善路漫漫啊😞😞😞</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习的路是用头发铺成的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我请了只猫猫🐈当看板这档事</title>
      <link href="2021/05/21/neko/"/>
      <url>2021/05/21/neko/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>上课摸🐟的时候，莫名想起了之前看过的一个教程——关于如何制作Live-2D，于是开始考虑，“要不要在我未命名星球上养只猫猫呢？毕竟小王子都有自己的🌹玫瑰花…”🤔<br>之后就着手学习如何在Hexo上添加<del>看板娘</del>看板猫猫啦<br>参考的资料在👉<a href="https://vonsdite.github.io/posts/fbd1f97f.html">Hexo Next 添加萌萌的宠物live2d</a><br>猫猫太可爱了，很难不想拥有</p><p><img src="/images/get.gif" alt="GET" loading="lazy"></p><p><del>然后就悄咪咪地把人家的猫猫抱回来啦</del></p></blockquote><span id="more"></span><p>也不是不喜欢自带的橘色双马尾看板娘啦，只是喜欢猫猫更多一点<br>（狐狸也很喜欢，但是没<del>偷</del>找到小狐狸，嘛，问题不大，P.S.<del>嘤嘤怪</del>小水獭也很喜欢🦦）</p><blockquote><h2 id="关于猫猫的名字"><a href="#关于猫猫的名字" class="headerlink" title="关于猫猫的名字"></a>关于猫猫的名字</h2><p>养猫猫算是人生大业，但家里一直不准，因为不想给自己找麻烦（什？！？）<br>多半是看出了我的不靠谱，大概率连自己都养不活，ごめん！！🙇<br>之前的想法是食物相关的名字，后期又在想要不要起个角色的名字之类的，现在的话，大概就准备叫“噗噗”了<br><del>正如老话所说的——贱名好养活嘛</del></p></blockquote><blockquote><h2 id="如何拥有同款猫猫？"><a href="#如何拥有同款猫猫？" class="headerlink" title="如何拥有同款猫猫？"></a>如何拥有同款猫猫？</h2><ol><li>打开命令行<code>CMD</code>，输入cd 你的博客存储路径</li><li>输入👇进行插件下载</li></ol></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-helper-live2d --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><ol start="3"><li>插件<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a>下载成功后，命令行输入<code>hexo s</code>就可以找到看板娘啦</li><li>在配置文件<code>_config.yml</code>中进行配置</li></ol></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token comment"># 这是猫猫的模型</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>tororo  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token comment"># 设置猫猫所处的位置与大小</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">120</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">240</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">react</span><span class="token punctuation">:</span>    <span class="token key atrule">opacityDefault</span><span class="token punctuation">:</span> <span class="token number">1</span>    <span class="token key atrule">opacityOnHover</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol start="5"><li>在命令行<code>CMD</code>，使用<code>npm install &#123;your model&#39;s package name&#125;</code>就可以下载你喜欢的模型啦，这里用的是<code>live2d-widget-model-tororo</code></li><li>之后再进行生成，部署，大家就可以在你站点上看猫猫啦</li></ol></blockquote><p><img src="/images/yep.gif" alt="YE" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> Nino的乱七八糟日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 日常 </tag>
            
            <tag> Live-2D </tag>
            
            <tag> Demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【补档】狸猫计划-仿写百度主页</title>
      <link href="2021/05/21/second/"/>
      <url>2021/05/21/second/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="狸猫计划"><a href="#狸猫计划" class="headerlink" title="狸猫计划"></a>狸猫计划</h1><p>作为一系列的仿写项目，出于自己追求完美（bushi🙅）的性格，力争将静态网页写的相差无几。<br>因为狐和狸都很擅长变化嘛，而且狸的变化更胜一筹（👈有顶天家族🐸的影响），所以决定将这个计划命名为狸猫测试啦👏👏👏</p></blockquote><span id="more"></span><p>这个项目是刚学习了一周左右的练手，为了不打击自己的积极性，所以先向最简单的百度下手啦🤭</p><p>整个页面就如👇所示啦</p><p><img src="/images/baidu.gif" alt="baidu" loading="lazy"></p><p>如果你想要获取到这份代码的话，可以去👉<a href="https://github.com/SudaYuzuru/Test">❗这里哦</a>下载。<del>（一般不会有人想要的吧，别自以为是啊喂）</del></p>]]></content>
      
      
      <categories>
          
          <category> 前端学习的路是用头发铺成的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个看起来毫无意义的企划</title>
      <link href="2021/05/20/three/"/>
      <url>2021/05/20/three/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>设计者：废柴狐狸和三个才貌双全的美女<br>设计主题：记账APP<br>名称：No Money 没钱💴记账<br>项目链接：<a href="https://github.com/SudaYuzuru/NoMoney-Android/tree/master">NoMoney-Android</a><br>如果你对这个项目感兴趣的话，就点开看看叭✨</p></blockquote><span id="more"></span><p><del>（介绍视频正在📺审核中，审核结束后会附上视频链接哒😀）</del><br>已经通过审核啦！戳👇下方链接可以看啦<br><a href="https://www.bilibili.com/video/BV1Qh411v7M4">Android开发-No Money 没钱记账</a></p><blockquote><h2 id="官方来讲的话，整个APP的设计背景如下："><a href="#官方来讲的话，整个APP的设计背景如下：" class="headerlink" title="官方来讲的话，整个APP的设计背景如下："></a>官方来讲的话，整个APP的设计背景如下：</h2><p>本设计为一款记账APP，通过手动添加账目并利用图表可视化的方式，使用户可以更加清晰的了解自己的每日收支状况，对自身的经济状况有一定概念，知晓自己每笔钱的去向，以及通过设置预算的方式，有规划地使用自己的钱财。此外，对比市面上常用的支付软件自动生成账单的方式，手动添加账目可以进行更加精确的分类，消除自动分类所产生的偏差。</p></blockquote><p>P.S.其实就是太复杂的项目写不出来，其他的呢，又没有头绪，嘛，只能挑个舒服一点的咯😀</p><blockquote><h2 id="整体功能大概就是下面几种："><a href="#整体功能大概就是下面几种：" class="headerlink" title="整体功能大概就是下面几种："></a>整体功能大概就是下面几种：</h2><ol><li>启动动画的设计与逻辑编写、收入支出界面的页面设计与逻辑实现（包括软键盘⌨设计与逻辑，备注文本框的弹出界面）、在AccountAdapter中描述记录一条数据相关内容的类、创建dbManager数据库进行数据管理。</li><li>主界面页面设计与逻辑实现（包括头布局设计与点击事件创建与监听，头布局👁进行明文密文转换，按钮的点击事件）、更多界面的弹窗显示、⏰定时提醒页面设计与逻辑实现、桌面部件使用说明页面的绘制。</li><li>搜索界面设计与逻辑实现、关于界面设计与逻辑实现、账单记录页面设计与逻辑实现（包括📅日历对话框的绘制与逻辑编写）、设置页面设计与逻辑实现（包括删除全部记录的逻辑编写）、桌面部件的绘制与逻辑实现。</li><li>每月账单分析界面的布局设计与逻辑实现（包括对收支类型百分比进行计算并通过列表显示，以及日历对话框的的使用）、账单详情柱状图的绘制与逻辑实现。</li></ol></blockquote><p>🤔简单来说呢，就是记账该有的它都有，顺便还多了些<del>没什么用的</del>功能：例如添加桌面小部件、启动时有启动动画等等等</p><blockquote><h2 id="整体流程图就如下啦👇"><a href="#整体流程图就如下啦👇" class="headerlink" title="整体流程图就如下啦👇"></a>整体流程图就如下啦👇</h2><p><img src="/images/app_all.jpg" alt="app" loading="lazy"></p><p>如果你喜欢这个项目，也想要使用它的话，可以点击👆上方的项目链接下载哦，已经放到GitHub上了（希望得到你的⭐）</p></blockquote><p>over，感谢你的观看❤</p>]]></content>
      
      
      <categories>
          
          <category> 关于疯狂脱发的企划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安利 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于第一次书写个人博客这件事</title>
      <link href="2021/05/20/first/"/>
      <url>2021/05/20/first/</url>
      
        <content type="html"><![CDATA[<h1 id="关于被云空调勾起兴趣而去搭建个人博客的杂七杂八事情。"><a href="#关于被云空调勾起兴趣而去搭建个人博客的杂七杂八事情。" class="headerlink" title="关于被云空调勾起兴趣而去搭建个人博客的杂七杂八事情。"></a>关于被云空调勾起兴趣而去搭建个人博客的杂七杂八事情。</h1><p>整个过程呢，就是，被师哥安利了<a href="https://www.yunyoujun.cn/posts/air-conditioner/">云空调</a>的项目，结果点进去之后种草了<a href="https://www.yunyoujun.cn/">云游君的小站</a>，整个页面和样式真的超级令我心动，<strong>Suki!!!!</strong><br>之后就借用云游君的模板来搭建属于自己的博客啦！强推<a href="https://github.com/YunYouJun/hexo-theme-yun">hexo-theme-yun</a>主题，不论是布局还是动画，都极其心动！<strong>Dokidoki♥</strong><br>本文呢，就当作一次纪念叭，也不知道该写点什么</p><span id="more"></span><p>最近为站点进行更新啦，包括优化了评论区，增加live-2D看板</p>]]></content>
      
      
      <categories>
          
          <category> Nino的乱七八糟日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 日常 </tag>
            
            <tag> 安利 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
